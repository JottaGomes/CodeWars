Complete the function scramble(str1, str2) that returns true if a portion of str1 characters can be rearranged to match str2, otherwise returns false.

Notes:

Only lower case letters will be used (a-z). No punctuation or digits will be included.
Performance needs to be considered.
Examples
scramble('rkqodlw', 'world') ==> True
scramble('cedewaraaossoqqyt', 'codewars') ==> True
scramble('katas', 'steak') ==> False

-------------------------- // ---------------------------------------------------- // --------------------------------------------------// ---------

import java.util.Arrays;
import java.util.LinkedList;
public class Scramblies {
    
    public static boolean scramble(String str1, String str2) {
   LinkedList list = new LinkedList<>();
            char [] chars1 = str1.toCharArray();
            char [] chars2 = str2.toCharArray();
           

        for (int i = 0; i < chars2.length; i++) {
            list.add(chars2[i]);
        }

        System.out.println(list);
            boolean result = false;
        for (char c : chars1) {


            for (Object o : list) {
                if (o.equals(c) ){
                list.remove(o);
                break;
                }
            }

        }
        System.out.println(list);
        if (list.size() == 0){
            result = true;
        }
        System.out.println(result);
            return result;   
    }
}